<!DOCTYPE html>
<html lang="sv">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= parsedData.title %></title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/mermaid@9.3.0/dist/mermaid.min.js"></script>
  <style>
    .hidden-question {
      display: none;
    }
    .tab-content {
      display: none;
    }
    .tab-content.active {
      display: block;
    }
    .tab-content.active div {
      overflow: hidden;
    }
    .mermaid-container {
      overflow: auto;
      padding: 20px;
      transition: transform 0.3s ease;
      transform-origin: center top;
    }
  </style>
</head>
<body class="p-6 bg-gray-50">
  <div class="max-w-5xl mx-auto bg-white p-8 shadow-md rounded-lg">
    <h1 class="text-3xl font-bold mb-6 text-center text-blue-800"><%= parsedData.title %></h1>

    <!-- Tab Navigation with Tailwind -->
    <div class="border-b border-gray-200 mb-6">
      <div class="flex justify-center">
        <nav class="flex space-x-8" aria-label="Tabs">
          <button class="tab-button px-3 py-2 border-b-2 font-medium text-sm border-blue-500 text-blue-600 active"
                  data-tab="form-tab"
                  aria-current="page">
            Formulär
          </button>
          <button class="tab-button px-3 py-2 border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                  data-tab="diagram-tab">
            Process-diagram
          </button>
          <% if (parsedData.rawMermaid) { %>
            <button class="tab-button px-3 py-2 border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                    data-tab="code-tab">
              Mermaid kod
            </button>
          <% } %>
        </nav>
      </div>
    </div>

    <!-- Form Tab Content -->
    <div id="form-tab" class="tab-content active">
      <form id="processForm" class="space-y-12">
        <% parsedData.sections.forEach((section, sectionIndex) => { %>
          <div class="section border-t-2 pt-6" id="section-<%= section.id %>">
            <h2 class="text-2xl font-semibold mb-6"><%= section.title %></h2>

            <% if (section.questions && section.questions.length > 0) { %>
              <%
              // Första omgången - Identifiera frågor utan beroenden så dessa kan visas först
              let questionsWithoutDependencies = section.questions.filter(q =>
                (!q.dependencies || q.dependencies.length === 0) &&
                (!q.indirectDependencies || q.indirectDependencies.length === 0)
              );

              // Andra omgången - Frågor med beroenden
              let questionsWithDependencies = section.questions.filter(q =>
                (q.dependencies && q.dependencies.length > 0) ||
                (q.indirectDependencies && q.indirectDependencies.length > 0)
              );

              // Alla frågor i ordning, först utan beroenden, sedan med
              let orderedQuestions = [...questionsWithoutDependencies, ...questionsWithDependencies];
              %>

              <% orderedQuestions.forEach((question, questionIndex) => { %>
                <%
                // Skapa en datastruktur som beskriver alla beroenden för JavaScript
                let dependencyData = [];

                // Lägg till direkta beroenden
                if (question.dependencies && question.dependencies.length > 0) {
                  question.dependencies.forEach(dep => {
                    dependencyData.push({
                      type: 'direct',
                      questionId: dep.questionId,
                      answer: dep.answer,
                      multiple: dep.multiple || false
                    });
                  });
                }

                // Lägg till indirekta beroenden
                if (question.indirectDependencies && question.indirectDependencies.length > 0) {
                  question.indirectDependencies.forEach(dep => {
                    dependencyData.push({
                      type: 'indirect',
                      questionId: dep.questionId,
                      answer: dep.answer,
                      multiple: dep.multiple || false,
                      via: dep.via
                    });
                  });
                }

                // Konvertera till JSON-sträng för data-attributet
                let dependencyJson = JSON.stringify(dependencyData);

                // Frågan ska vara dold om den har något beroende
                let isInitiallyHidden = dependencyData.length > 0;
                %>

                <div class="question-container mb-8 <%= isInitiallyHidden ? 'hidden-question' : '' %>"
                     id="question-<%= question.id %>"
                     data-dependencies="<%= dependencyJson %>">
                  <h3 class="text-xl font-medium mb-4"><%= question.text %></h3>

                  <% if (question.answers && question.answers.length > 0) { %>
                    <div class="answers-container space-y-3">
                      <% if (question.answers.length === 1) { %>
                        <!-- Om det bara finns ett svarsalternativ, visa som kryssruta -->
                        <div class="answer flex items-start space-x-3">
                          <input type="checkbox"
                                 name="question-<%= question.id %>"
                                 id="answer-<%= question.id %>-0"
                                 value="<%= question.answers[0].targetId %>"
                                 data-question-id="<%= question.id %>"
                                 data-answer-text="<%= question.answers[0].text %>"
                                 class="mt-1 answer-input">
                          <label for="answer-<%= question.id %>-0" class="text-lg">
                            <%= question.answers[0].text %>

                            <% if (question.answers[0].recommendation) { %>
                              <span class="text-sm block mt-1 text-gray-600">
                                <%= question.answers[0].recommendation %>
                              </span>
                            <% } %>
                          </label>
                        </div>
                      <% } else { %>
                        <!-- Flera svarsalternativ -->
                        <% question.answers.forEach((answer, answerIndex) => { %>
                          <div class="answer flex items-start space-x-3">
                            <input type="<%= answer.multiple ? 'checkbox' : 'radio' %>"
                                   name="question-<%= question.id %>"
                                   id="answer-<%= question.id %>-<%= answerIndex %>"
                                   value="<%= answer.targetId %>"
                                   data-question-id="<%= question.id %>"
                                   data-answer-text="<%= answer.text %>"
                                   class="mt-1 answer-input">
                            <label for="answer-<%= question.id %>-<%= answerIndex %>" class="text-lg">
                              <%= answer.text %>

                              <% if (answer.recommendation) { %>
                                <span class="text-sm block mt-1 text-gray-600">
                                  <%= answer.recommendation %>
                                </span>
                              <% } %>
                            </label>
                          </div>
                        <% }) %>
                      <% } %>
                    </div>
                  <% } else { %>
                    <textarea class="w-full p-3 border rounded-lg"
                            name="question-<%= question.id %>"
                            rows="3"
                            placeholder="Skriv ditt svar här..."></textarea>
                  <% } %>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-gray-600 italic">Inga frågor tillgängliga för denna sektion.</p>
            <% } %>
          </div>
        <% }) %>

        <div class="pt-8 border-t-2">
          <button type="button" id="summarizeBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg shadow-md transition-colors">
            Sammanfatta dina val
          </button>
        </div>
      </form>

      <div id="summary" class="mt-8 hidden pt-8 border-t-2">
        <h2 class="text-2xl font-semibold mb-6">Sammanfattning av dina val</h2>
        <div id="summaryContent" class="bg-gray-50 p-6 rounded-lg">
          <!-- Innehåll genereras dynamiskt -->
        </div>

        <button id="downloadPDF" class="mt-6 bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg shadow-md transition-colors">
          Ladda ner PDF
        </button>
      </div>
    </div>

    <!-- Diagram Tab Content -->
    <div id="diagram-tab" class="tab-content">
      <div class="bg-gray-50 p-4 rounded-lg mb-4">
        <div id="diagram-container" class="overflow-auto p-4">
          <!-- Här kommer diagrammet att renderas -->
          <div id="mermaid-output" class="text-center"></div>
        </div>
      </div>
      <div class="my-6 text-center">
        <button id="render-mermaid-btn" class="bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded transition-colors">
          Rendera diagram
        </button>

        <div class="mt-4">
          <button id="zoom-in" class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded mr-2 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block mr-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
            </svg>
            Zooma in
          </button>
          <button id="zoom-out" class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded mr-2 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block mr-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z" clip-rule="evenodd" />
            </svg>
            Zooma ut
          </button>
          <button id="reset-zoom" class="bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 inline-block mr-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd" />
            </svg>
            Återställ zoom
          </button>
        </div>
      </div>

      <!-- Dold container för diagramkoden (används för mermaid.render) -->
      <div id="mermaid-code" style="display: none;"><%= parsedData.rawMermaid %></div>
    </div>

    <!-- Code Tab Content -->
    <% if (parsedData.rawMermaid) { %>
      <div id="code-tab" class="tab-content">
        <div class="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-auto">
          <pre class="whitespace-pre-wrap"><code><%= parsedData.rawMermaid %></code></pre>
        </div>
        <div class="mt-4 text-sm text-gray-500">
          <p>Detta är den underliggande Mermaid-koden som genererar flödesdiagrammet. Du kan använda denna kod i andra Mermaid-verktyg.</p>
        </div>
      </div>
    <% } %>
  </div>

  <p class="max-w-3xl text-sm block my-4 text-gray-600 text-center mx-auto">
    Innehållet på denna webbplats är licensierat till <a href="https://digidemlab.org">Digidem Lab</a> under 
    <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreferrer">
      Creative Commons Erkännande-IckeKommersiell-DelaLika 4.0 Internationell Licens (CC BY-NC-SA 4.0)
    </a>.
  </p>

  <!-- Ersätt skriptdelen i slutet av form-template.ejs med detta: -->

  <!-- Ladda externa scripts -->
  <script src="assets/js/form-dependencies.js"></script>
  <script src="assets/js/form-summary.js"></script>
  <script src="assets/js/form-pdf.js"></script>
  <script src="assets/js/tabs.js"></script>
  <script src="assets/js/main.js"></script>

  <script>
    // Ladda Mermaid-biblioteket och initiera allt när DOM är klar
    document.addEventListener('DOMContentLoaded', function() {
      // Konfigurera Mermaid på global nivå
      if (window.mermaid) {
        console.log('Mermaid library loaded successfully');
      } else {
        console.warn('Mermaid library not detected');
      }

      // Resten av initieringen sker i tabs.js
    });
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Säkerställ att mermaid.js är laddat
      if (typeof mermaid === 'undefined') {
        console.error('Mermaid library is not loaded!');

        // Försök ladda mermaid dynamiskt
        var script = document.createElement('script');
        script.src = 'https://cdn.jsdelivr.net/npm/mermaid@9.3.0/dist/mermaid.min.js';
        script.onload = initMermaid;
        document.head.appendChild(script);
      } else {
        initMermaid();
      }

      function initMermaid() {
        console.log('Initializing Mermaid...');

        // Konfigurera mermaid
        mermaid.initialize({
          startOnLoad: false,
          securityLevel: 'loose',
          theme: 'default',
          flowchart: {
            htmlLabels: true,
            curve: 'basis',
            nodeSpacing: 50,
            rankSpacing: 80
          }
        });

        // Hämta referens till element
        const tabButtons = document.querySelectorAll('.tab-button');
        const renderBtn = document.getElementById('render-mermaid-btn');
        const diagramTab = document.getElementById('diagram-tab');
        const outputDiv = document.getElementById('mermaid-output');
        const codeDiv = document.getElementById('mermaid-code');
        const zoomContainer = document.getElementById('diagram-container');
        let zoomLevel = 1;

        // Lyssna efter flik-byten
        tabButtons.forEach(button => {
          button.addEventListener('click', function(event) {
            if (event.target.getAttribute('data-tab') === 'diagram-tab') {
              renderMermaidDiagram();
            }
          });
        });

        // Lyssna efter klick på rendera-knappen
        if (renderBtn) {
          renderBtn.addEventListener('click', renderMermaidDiagram);
        }

        // Zooma in-knapp
        document.getElementById('zoom-in').addEventListener('click', function() {
          zoomLevel += 0.2;
          updateZoom();
        });

        // Zooma ut-knapp
        document.getElementById('zoom-out').addEventListener('click', function() {
          zoomLevel -= 0.2;
          updateZoom();
        });

        // Återställ zoom-knapp
        document.getElementById('reset-zoom').addEventListener('click', function() {
          zoomLevel = 1;
          updateZoom();
        });

        // Uppdatera zoom-nivån
        function updateZoom() {
          if (zoomContainer) {
            zoomContainer.style.transform = `scale(${zoomLevel})`;
            zoomContainer.style.transformOrigin = 'center top';
            zoomContainer.style.transition = 'transform 0.3s ease';
          }
        }

        // Rendera mermaid-diagrammet
        function renderMermaidDiagram() {
          console.log('Attempting to render Mermaid diagram...');

          if (!outputDiv || !codeDiv) {
            console.error('Required elements not found');
            return;
          }

          // Hämta mermaid-koden
          const code = codeDiv.textContent || codeDiv.innerText;

          try {
            // Rensa tidigare innehåll
            outputDiv.innerHTML = '';

            // Använd mermaid.render för bättre kompatibilitet
            const uniqueId = 'mermaid-diagram-' + Date.now();

            // Skapa en callback
            mermaid.render(uniqueId, code, (svgCode) => {
              console.log('Diagram rendered successfully!');
              outputDiv.innerHTML = svgCode;
            });
          } catch (error) {
            console.error('Failed to render Mermaid diagram:', error);
            outputDiv.innerHTML = `
              <div class="p-4 bg-red-100 text-red-700 rounded-md">
                <p>Det gick inte att rendera diagrammet. Felmeddelande:</p>
                <pre class="mt-2 p-2 bg-gray-100 text-xs overflow-auto">${error.message}</pre>
              </div>
            `;
          }
        }

        // Rendera om diagram-fliken är aktiv från början
        if (diagramTab && diagramTab.classList.contains('active')) {
          renderMermaidDiagram();
        }
      }
    });
  </script>
</body>
</html>
